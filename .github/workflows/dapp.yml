name: Dapp

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "infrastructure/**"
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for workflow execution'
        required: false
        default: 'dev'
      upstream_builds:
        description: 'Upstream builds'
        required: false
      upstream_ref:
        description: 'Git reference to checkout (e.g. branch name)'
        required: false
        default: 'main'

jobs:
  dapp-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'

      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            path-filter:
              - './!((docs|infrastructure)/**)'

  dapp-build-and-publish:
    needs: dapp-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.dapp-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/ci/actions/load-env-variables@v1
        with:
          # TODO: Consider passing of `environment` input instead of using 
          # hardcoded value. Would require some rework in action's code or
          # in config files.
          environment: 'ropsten'

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      
      - name: Resolve latest tbtc.js
        if: github.event_name != 'workflow_dispatch'
        run: npm update @keep-network/tbtc.js

      - name: Get upstream packages' versions
        if: github.event_name == 'workflow_dispatch'
        uses: keep-network/ci/actions/upstream-builds-query@v1
        id: upstream-builds-query
        with:
          upstream-builds: ${{ github.event.inputs.upstream_builds }}
          query: |
            tbtcjs-version = github.com/keep-network/tbtc.js#version

      - name: Resolve latest tbtc.js
        if: github.event_name == 'workflow_dispatch'
        run: |
            npm install --save-exact \
              @keep-network/tbtc.js@${{ steps.upstream-builds-query.outputs.tbtcjs-version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Google Container Registry
        if: github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish Keep Token Dashboard image
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'tbtc-dapp'
        with:
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: revision=${{ github.sha }}
          push: ${{ github.event_name == 'workflow_dispatch' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Notify CI about completion of the workflow
        if: github.event_name == 'workflow_dispatch'
        uses: keep-network/ci/actions/notify-workflow-completed@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          module: "github.com/keep-network/tbtc-dapp"
          url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          environment: ${{ github.event.inputs.environment }}
          upstream_builds: ${{ github.event.inputs.upstream_builds }}
          upstream_ref: ${{ github.event.inputs.upstream_ref }}
          version: ${{ github.sha }}

      - # Temp fix - move cache instead of copying (added below step and
        # modified value of `cache-to`).
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        # Without the change some jobs were failing with `no space left on device`
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  dapp-lint:
    needs: dapp-detect-changes
    if: |
      github.event_name == 'push'
        || needs.dapp-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2 
        with:
          node-version: "14.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-dapp-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint
