name: Dapp

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "infrastructure/**"
  pull_request:
  workflow_dispatch:

jobs:
  dapp-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request' 
    - uses: dorny/paths-filter@v2
      if: github.event_name == 'pull_request' 
      id: filter
      with:
        filters: |
          path-filter:
            - './!((docs|infrastructure)/**)'

  dapp-build-and-publish:
    needs: dapp-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.dapp-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/load-env-variables@main # TODO: use @v1 once availible
        env: 
          CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          environment: 'ropsten'
          ref: 'master'

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"
      
      - name: Resolve latest tbtc.js
        run: npm update @keep-network/tbtc.js

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Google Container Registry
        if: | # TODO: remove 'rfc-18' condition one tested
          (github.ref == 'refs/heads/master'
            && github.event_name != 'pull_request')
            || github.ref == 'refs/heads/rfc-18/load-env-var'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish Keep Token Dashboard image
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'tbtc-dapp'
        with:
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: revision=${{ github.sha }}
          push: | # TODO: remove 'rfc-18' condition one tested
            ${{ (github.ref == 'refs/heads/master'
              && github.event_name != 'pull_request')
              || github.ref == 'refs/heads/rfc-18/load-env-var' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  dapp-lint:
    needs: dapp-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.dapp-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2 
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-dapp-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint
