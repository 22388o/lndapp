{
  "contractName": "ECDSAKeep",
  "abi": [
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_members",
          "type": "address[]"
        },
        {
          "name": "_honestThreshold",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "publicKey",
          "type": "bytes"
        }
      ],
      "name": "PublicKeyPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "digest",
          "type": "bytes32"
        }
      ],
      "name": "SignatureRequested",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_publicKey",
          "type": "bytes"
        }
      ],
      "name": "setPublicKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPublicKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_digest",
          "type": "bytes32"
        }
      ],
      "name": "sign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getPublicKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"setPublicKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_members\",\"type\":\"address[]\"},{\"name\":\"_honestThreshold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"PublicKeyPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"SignatureRequested\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"TODO: This is a stub contract - needs to be implemented.\",\"methods\":{\"getPublicKey()\":{\"return\":\"Signer's public key.\"},\"setPublicKey(bytes)\":{\"details\":\"Stub implementations.\",\"params\":{\"_publicKey\":\"Signer's public key.\"}},\"sign(bytes32)\":{\"details\":\"TODO: Access control.\",\"params\":{\"_digest\":\"Digest to be signed.\"}}},\"title\":\"ECDSA Keep\"},\"userdoc\":{\"methods\":{\"getPublicKey()\":{\"notice\":\"Returns the keep signer's public key.\"},\"setPublicKey(bytes)\":{\"notice\":\"Set a signer's public key for the keep.\"},\"sign(bytes32)\":{\"notice\":\"Calculates a signature over provided digest by the keep.\"}},\"notice\":\"Contract reflecting an ECDSA keep.\"}},\"settings\":{\"compilationTarget\":{\"/Users/jakub/go/src/github.com/keep-network/keep-tecdsa/solidity/contracts/ECDSAKeep.sol\":\"ECDSAKeep\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jakub/go/src/github.com/keep-network/keep-tecdsa/solidity/contracts/ECDSAKeep.sol\":{\"keccak256\":\"0x639dda705c49275a3fb455cf7c7b8ac7639ad4049ad502bd6d3bfab7803dede7\",\"urls\":[\"bzzr://fe9c13e1d55d57324a222e6b32d8be964738e4f5cc2fff39c692aa3f3a5475c5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106d53803806106d58339810180604052606081101561003357600080fd5b8101908080519060200190929190805164010000000081111561005557600080fd5b8281019050602081018481111561006b57600080fd5b815185602082028301116401000000008211171561008857600080fd5b505092919060200180519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600190805190602001906100f3929190610103565b50806002819055505050506101d0565b82805482825590600052602060002090810192821561017c579160200282015b8281111561017b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610123565b5b509050610189919061018d565b5090565b6101cd91905b808211156101c957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610193565b5090565b90565b6104f6806101df6000396000f3fe608060405234801561001057600080fd5b506004361061005e576000357c0100000000000000000000000000000000000000000000000000000000900480632e33445214610063578063799cd333146100e6578063a91d58b414610114575b600080fd5b61006b6101cf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ab578082015181840152602081019050610090565b50505050905090810190601f1680156100d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610112600480360360208110156100fc57600080fd5b8101908080359060200190929190505050610271565b005b6101cd6004803603602081101561012a57600080fd5b810190808035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184600183028401116401000000008311171561017b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061036f565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102675780601f1061023c57610100808354040283529160200191610267565b820191906000526020600020905b81548152906001019060200180831161024a57829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f6e6c79206b656570206f776e65722063616e2061736b20746f207369676e0081525060200191505060405180910390fd5b7f34f611bedd4f8c135323bbfc4921e3f6e4feb7eef591036eed6af5462e6cfab0816040518082815260200191505060405180910390a150565b8060039080519060200190610385929190610425565b507ff62bba8b270bef3e8d0fcebc1f86567664da8ccbd03e8509d6231cc8d63f4b31816040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e85780820151818401526020810190506103cd565b50505050905090810190601f1680156104155780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061046657805160ff1916838001178555610494565b82800160010185558215610494579182015b82811115610493578251825591602001919060010190610478565b5b5090506104a191906104a5565b5090565b6104c791905b808211156104c35760008160009055506001016104ab565b5090565b9056fea165627a7a723058207b71b1c368fc52564065357b1d8d281d53f1fbcac35890e71b370ff058d7157c0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005e576000357c0100000000000000000000000000000000000000000000000000000000900480632e33445214610063578063799cd333146100e6578063a91d58b414610114575b600080fd5b61006b6101cf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ab578082015181840152602081019050610090565b50505050905090810190601f1680156100d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610112600480360360208110156100fc57600080fd5b8101908080359060200190929190505050610271565b005b6101cd6004803603602081101561012a57600080fd5b810190808035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184600183028401116401000000008311171561017b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061036f565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102675780601f1061023c57610100808354040283529160200191610267565b820191906000526020600020905b81548152906001019060200180831161024a57829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f6e6c79206b656570206f776e65722063616e2061736b20746f207369676e0081525060200191505060405180910390fd5b7f34f611bedd4f8c135323bbfc4921e3f6e4feb7eef591036eed6af5462e6cfab0816040518082815260200191505060405180910390a150565b8060039080519060200190610385929190610425565b507ff62bba8b270bef3e8d0fcebc1f86567664da8ccbd03e8509d6231cc8d63f4b31816040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e85780820151818401526020810190506103cd565b50505050905090810190601f1680156104155780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061046657805160ff1916838001178555610494565b82800160010185558215610494579182015b82811115610493578251825591602001919060010190610478565b5b5090506104a191906104a5565b5090565b6104c791905b808211156104c35760008160009055506001016104ab565b5090565b9056fea165627a7a723058207b71b1c368fc52564065357b1d8d281d53f1fbcac35890e71b370ff058d7157c0029",
  "sourceMap": "160:1798:0:-;;;824:221;8:9:-1;5:2;;;30:1;27;20:12;5:2;824:221:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;824:221:0;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;824:221:0;;;;;;;;;;;;;;;;;960:6;952:5;;:14;;;;;;;;;;;;;;;;;;986:8;976:7;:18;;;;;;;;;;;;:::i;:::-;;1022:16;1004:15;:34;;;;824:221;;;160:1798;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "160:1798:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;160:1798:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1547:91:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:160:0;;;;;;;;;;;;;;;;;:::i;:::-;;1189:261;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1189:261:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1189:261:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1189:261:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1189:261:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1189:261:0;;;;;;;;;;;;;;;:::i;:::-;;1547:91;1592:12;1622:9;1615:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:91;:::o;1796:160::-;1866:5;;;;;;;;;;;1852:19;;:10;:19;;;1844:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:27;1941:7;1922:27;;;;;;;;;;;;;;;;;;1796:160;:::o;1189:261::-;1388:10;1376:9;:22;;;;;;;;;;;;:::i;:::-;;1413:30;1432:10;1413:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1413:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:261;:::o;160:1798::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.4;\n\n/// @title ECDSA Keep\n/// @notice Contract reflecting an ECDSA keep.\n/// @dev TODO: This is a stub contract - needs to be implemented.\ncontract ECDSAKeep {\n    // Owner of the keep.\n    address owner;\n    // List of keep members' addresses.\n    address[] internal members;\n    // Minimum number of honest keep members required to produce a signature.\n    uint256 honestThreshold;\n    // Signer's ECDSA public key serialized to 64-bytes, where X and Y coordinates\n    // are padded with zeros to 32-byte each.\n    bytes publicKey;\n\n    // Notification that a signer's public key was published for the keep.\n    event PublicKeyPublished(\n        bytes publicKey\n    );\n\n    // Notification that the keep was requested to sign a digest.\n    event SignatureRequested(\n        bytes32 digest\n    );\n\n    constructor(\n        address _owner,\n        address[] memory _members,\n        uint256 _honestThreshold\n    ) public {\n        owner = _owner;\n        members = _members;\n        honestThreshold = _honestThreshold;\n    }\n\n    /// @notice Set a signer's public key for the keep.\n    /// @dev Stub implementations.\n    /// @param _publicKey Signer's public key.\n    function setPublicKey(bytes memory _publicKey) public {\n        // TODO: Validate if `msg.sender` is on `members` list.\n        // TODO: Validate format: 32-bytes X + 32-bytes Y.\n        publicKey = _publicKey;\n        emit PublicKeyPublished(_publicKey);\n    }\n\n    /// @notice Returns the keep signer's public key.\n    /// @return Signer's public key.\n    function getPublicKey() public view returns (bytes memory) {\n       return publicKey;\n    }\n\n    /// @notice Calculates a signature over provided digest by the keep.\n    /// @dev TODO: Access control.\n    /// @param _digest Digest to be signed.\n    function sign(bytes32 _digest) public {\n        require(msg.sender == owner, \"Only keep owner can ask to sign\");\n        emit SignatureRequested(_digest);\n    }\n}\n",
  "sourcePath": "/Users/jakub/go/src/github.com/keep-network/keep-tecdsa/solidity/contracts/ECDSAKeep.sol",
  "ast": {
    "absolutePath": "/Users/jakub/go/src/github.com/keep-network/keep-tecdsa/solidity/contracts/ECDSAKeep.sol",
    "exportedSymbols": {
      "ECDSAKeep": [
        82
      ]
    },
    "id": 83,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ECDSA Keep\n @notice Contract reflecting an ECDSA keep.\n @dev TODO: This is a stub contract - needs to be implemented.",
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82
        ],
        "name": "ECDSAKeep",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "211:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "211:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "270:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "270:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "270:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "honestThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "380:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "publicKey",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "538:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 9,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "538:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "PublicKeyPublished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "669:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:31:0"
            },
            "src": "635:56:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "SignatureRequested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "797:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:30:0"
            },
            "src": "763:55:0"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "942:103:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "952:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "960:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "952:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "952:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "_members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "986:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "976:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "976:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "honestThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1004:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_honestThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1022:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1004:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "845:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "_members",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "869:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "869:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 22,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "869:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "904:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:99:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:0"
            },
            "scope": 82,
            "src": "824:221:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1243:207:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1376:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "_publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1388:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1376:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1432:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50,
                      "name": "PublicKeyPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1413:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "1408:35:0"
                }
              ]
            },
            "documentation": "@notice Set a signer's public key for the keep.\n @dev Stub implementations.\n @param _publicKey Signer's public key.",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "_publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1211:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1210:25:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:0:0"
            },
            "scope": 82,
            "src": "1189:261:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "1606:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "name": "publicKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1622:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 61,
                  "nodeType": "Return",
                  "src": "1615:16:0"
                }
              ]
            },
            "documentation": "@notice Returns the keep signer's public key.\n @return Signer's public key.",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1592:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1591:14:0"
            },
            "scope": 82,
            "src": "1547:91:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1834:122:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "1852:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1852:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1866:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206b656570206f776e65722063616e2061736b20746f207369676e",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d49eceddcfc0899bf4d19875b4683bce516a79026a0876715096e66273462dd",
                          "typeString": "literal_string \"Only keep owner can ask to sign\""
                        },
                        "value": "Only keep owner can ask to sign"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d49eceddcfc0899bf4d19875b4683bce516a79026a0876715096e66273462dd",
                          "typeString": "literal_string \"Only keep owner can ask to sign\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        502,
                        503
                      ],
                      "referencedDeclaration": 503,
                      "src": "1844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:63:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1941:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76,
                      "name": "SignatureRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1922:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1922:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "1917:32:0"
                }
              ]
            },
            "documentation": "@notice Calculates a signature over provided digest by the keep.\n @dev TODO: Access control.\n @param _digest Digest to be signed.",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "name": "_digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1810:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1809:17:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:0"
            },
            "scope": 82,
            "src": "1796:160:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 83,
        "src": "160:1798:0"
      }
    ],
    "src": "0:1959:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jakub/go/src/github.com/keep-network/keep-tecdsa/solidity/contracts/ECDSAKeep.sol",
    "exportedSymbols": {
      "ECDSAKeep": [
        82
      ]
    },
    "id": 83,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ECDSA Keep\n @notice Contract reflecting an ECDSA keep.\n @dev TODO: This is a stub contract - needs to be implemented.",
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82
        ],
        "name": "ECDSAKeep",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "211:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "211:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "270:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "270:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "270:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "honestThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "380:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "publicKey",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "538:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 9,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "538:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "PublicKeyPublished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "669:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:31:0"
            },
            "src": "635:56:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "SignatureRequested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "797:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:30:0"
            },
            "src": "763:55:0"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "942:103:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "952:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "960:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "952:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "952:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "_members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "986:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "976:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "976:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "honestThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1004:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_honestThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1022:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1004:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "845:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "_members",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "869:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "869:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 22,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "869:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "904:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:99:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:0"
            },
            "scope": 82,
            "src": "824:221:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1243:207:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1376:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "_publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1388:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1376:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1432:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50,
                      "name": "PublicKeyPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1413:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "1408:35:0"
                }
              ]
            },
            "documentation": "@notice Set a signer's public key for the keep.\n @dev Stub implementations.\n @param _publicKey Signer's public key.",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "_publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1211:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1210:25:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:0:0"
            },
            "scope": 82,
            "src": "1189:261:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "1606:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "name": "publicKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1622:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 61,
                  "nodeType": "Return",
                  "src": "1615:16:0"
                }
              ]
            },
            "documentation": "@notice Returns the keep signer's public key.\n @return Signer's public key.",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1592:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1591:14:0"
            },
            "scope": 82,
            "src": "1547:91:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1834:122:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "1852:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1852:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1866:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1852:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206b656570206f776e65722063616e2061736b20746f207369676e",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d49eceddcfc0899bf4d19875b4683bce516a79026a0876715096e66273462dd",
                          "typeString": "literal_string \"Only keep owner can ask to sign\""
                        },
                        "value": "Only keep owner can ask to sign"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d49eceddcfc0899bf4d19875b4683bce516a79026a0876715096e66273462dd",
                          "typeString": "literal_string \"Only keep owner can ask to sign\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        502,
                        503
                      ],
                      "referencedDeclaration": 503,
                      "src": "1844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:63:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1941:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76,
                      "name": "SignatureRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1922:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1922:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "1917:32:0"
                }
              ]
            },
            "documentation": "@notice Calculates a signature over provided digest by the keep.\n @dev TODO: Access control.\n @param _digest Digest to be signed.",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "name": "_digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1810:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1809:17:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:0"
            },
            "scope": 82,
            "src": "1796:160:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 83,
        "src": "160:1798:0"
      }
    ],
    "src": "0:1959:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-13T10:01:18.332Z",
  "devdoc": {
    "details": "TODO: This is a stub contract - needs to be implemented.",
    "methods": {
      "getPublicKey()": {
        "return": "Signer's public key."
      },
      "setPublicKey(bytes)": {
        "details": "Stub implementations.",
        "params": {
          "_publicKey": "Signer's public key."
        }
      },
      "sign(bytes32)": {
        "details": "TODO: Access control.",
        "params": {
          "_digest": "Digest to be signed."
        }
      }
    },
    "title": "ECDSA Keep"
  },
  "userdoc": {
    "methods": {
      "getPublicKey()": {
        "notice": "Returns the keep signer's public key."
      },
      "setPublicKey(bytes)": {
        "notice": "Set a signer's public key for the keep."
      },
      "sign(bytes32)": {
        "notice": "Calculates a signature over provided digest by the keep."
      }
    },
    "notice": "Contract reflecting an ECDSA keep."
  }
}
